{"version":3,"sources":["components/chat/Chat.js","components/join/Join.js","components/details/OnlineDetails.js","components/Input/Input.js","components/Messages/Message/Message.js","components/Messages/Messages.js","App.js","index.js"],"names":["socket","Join","useState","name","setName","room","setRoom","className","placeholder","type","onChange","event","target","value","onClick","e","preventDefault","to","OnlineDetails","users","map","Input","setMessage","sendMessage","message","onKeyPress","key","Message","text","user","isSentByCurrentUser","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","i","ENDPOINT","Chat","location","setUsers","setMessages","useEffect","queryString","parse","search","io","emit","error","alert","on","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9241e877.chunk.js","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport OnlineDetails from '../details/OnlineDetails'\r\nimport Input from '../Input/Input';\r\nimport queryString from 'query-string';\r\n\r\nimport io from 'socket.io-client';\r\n\r\n\r\nimport './Chat.css';\r\nimport Messages from '../Messages/Messages';\r\nconst ENDPOINT='localhost:5000';\r\n\r\n\r\nlet socket;\r\n\r\n\r\n\r\n\r\nconst Chat = ({location}) => {\r\n   \r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n    const [message,setMessage]=useState('');\r\n    const [users,setUsers]=useState([]);\r\n    const [messages,setMessages]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const { name, room}=queryString.parse(location.search);\r\n       \r\n\r\n        socket=io(ENDPOINT);\r\n        \r\n        setName(name);\r\n        setRoom(room);\r\n     \r\n        socket.emit('join',{name,room},(error)=>{\r\n            if(error){\r\n                alert(error);\r\n            }\r\n        })\r\n    },[ENDPOINT,location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', message => {\r\n          setMessages(messages => [ ...messages, message ]);\r\n        \r\n        });\r\n        socket.on(\"roomData\", ({ users }) => {\r\n            setUsers(users);})\r\n    }, []);\r\n    const sendMessage = (event) => {\r\n       \r\n        event.preventDefault();\r\n        if(message) {\r\n          socket.emit('sendMessage', message,()=>setMessage(''));\r\n         \r\n        }\r\n        \r\n      }\r\n\r\n   \r\n    return ( <div className=\"h1\"> \r\n\r\n    <h1 className=\"title\">Welcome to Let's chat</h1>\r\n    \r\n    <div className=\"outerContainer\">\r\n           \r\n\r\n            \r\n\r\n    <div className=\"container\">\r\n  \r\n \r\n\r\n  <Messages messages={messages} name={name}/>\r\n\r\n  <div className=\"input\">\r\n  <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n  \r\n      {/* <input className=\"message-input\" onChange={(e)=>{\r\n     setMessage(e.target.value);\r\n  \r\n  \r\n      }} type=\"text\" placeholder=\"Enter the message\" />\r\n      <button className=\"send-btn\" onClick ={\r\n          e=>sendMessage(e)\r\n  \r\n          }>Send</button> */}\r\n       \r\n  \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <OnlineDetails users={users}/>\r\n\r\n        \r\n\r\n</div></div>\r\n       \r\n     );\r\n    }\r\n \r\nexport default Chat;","import {useState} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Join.css';\r\n\r\nconst Join = () => {\r\n    const [name,setName]=useState('');\r\n    const [room,setRoom]=useState('');\r\n\r\n    return ( \r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Join</h1>\r\n                <div><input placeholder=\"Name\" type=\"text\" className=\"joinInput\" onChange={(event) => setName(event.target.value)} /></div>\r\n                <div><input placeholder=\"Room\" type=\"text\" className=\"joinInput mt-20\"onChange={(event) => setRoom(event.target.value)} /></div>\r\n                <Link onClick={e => (!name || !room) ? e.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\r\n          <button className={'button mt-20'} type=\"submit\">Sign In</button>\r\n        </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Join;","import React from 'react';\r\n\r\n\r\n\r\nimport './online.css';\r\n\r\nconst OnlineDetails = ({ users }) => (\r\n  <div className=\"textContainer\">\r\n   \r\n    {\r\n      users\r\n        ? (\r\n          <div>\r\n            <h1>People currently chatting:</h1>\r\n            <div className=\"activeContainer\">\r\n              <h2>\r\n                {users.map(({name}) => (\r\n                  <div key={name} className=\"activeItem\">\r\n                    {name}\r\n                  \r\n                  </div>\r\n                ))}\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        )\r\n        : null\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default OnlineDetails;","import React from 'react';\r\n\r\n\r\n\r\nconst Input = ({ setMessage, sendMessage, message }) => (\r\n  <form className=\"form\">\r\n    <input\r\n      className=\"message-input\"\r\n      type=\"text\"\r\n      placeholder=\"Type a message...\"\r\n      value={message}\r\n      onChange={({ target: { value } }) => setMessage(value)}\r\n      onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n    />\r\n    <button className=\"send-btn\" onClick={e => sendMessage(e)}>Send</button>\r\n  </form>\r\n)\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport './Message.css';\r\n\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Message = ({ message: { text, user }, name }) => {\r\n\r\n  \r\n  let isSentByCurrentUser = false;\r\n\r\n  const trimmedName = name.trim().toLowerCase();\r\n  \r\n\r\n  if(user === trimmedName) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n\r\n  return (\r\n    isSentByCurrentUser\r\n      ? (\r\n        <div className=\"messageContainer justifyEnd\">\r\n          <p className=\"sentText pr-10\">{trimmedName}</p>\r\n          <div className=\"messageBox backgroundBlue\">\r\n            <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\r\n          </div>\r\n        </div>\r\n        )\r\n        : (\r\n          <div className=\"messageContainer justifyStart\">\r\n            <div className=\"messageBox backgroundLight\">\r\n              <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\r\n            </div>\r\n            <p className=\"sentText pl-10 \">{user}</p>\r\n          </div>\r\n        )\r\n  );\r\n   }\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\nimport Message from './Message/Message';\r\n\r\nimport './Messages.css';\r\n\r\nconst Messages = ({ messages, name }) => (\r\n    \r\n    \r\n  <ScrollToBottom className=\"messages\">\r\n     \r\n    {messages.map((message, i) => <div key={i}><Message message={message} name={name}/></div>)}\r\n  </ScrollToBottom>\r\n);\r\n\r\nexport default Messages;","\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Join from './components/join/Join'\nimport Chat from './components/chat/Chat'\n\n\nconst App=()=> {\n  return(\n    <Router>\n    <div className=\"App\">\n      <Switch>\n      <Route path=\"/\" exact component={Join}/>\n    <Route path=\"/chat\"  component={Chat}/>\n      </Switch>\n    \n    </div>)\n  </Router>\n  \n  \n\n\n  \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}